import pygame
import os
import time
from Node import *
from Tile import *

pygame.init()
size = width, height = 1280, 720
screen = pygame.display.set_mode(size)

#constants representing colors
BLUE = (71,106,165)
RED = (190,61,52)
GREEN = (119,182,60)
YELLOW = (244,234,61)
GREY = (234,233,232)
WHITE = (255,255,254)
BLACK = (0,0,0)

TILESIZE = size[1] / 14
MAPWIDTH = 14
MAPHEIGHT = 14
OFFSET = (size[0] - (TILESIZE*MAPWIDTH)) / 2

tilemap = [
            [BLUE,BLUE,BLUE,GREY,WHITE,GREY,WHITE,WHITE,GREY,WHITE,GREY,RED,RED,RED],
            [BLUE,BLUE,BLUE,GREY,WHITE,GREY,WHITE,WHITE,GREY,WHITE,GREY,RED,RED,RED],
            [BLUE,BLUE,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,RED,RED],
            [GREY,GREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,GREY,GREY],
            [WHITE,WHITE,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,WHITE,WHITE],
            [GREY,GREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,GREY,GREY],
            [WHITE,WHITE,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,WHITE,WHITE],
            [WHITE,WHITE,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,WHITE,WHITE],
            [GREY,GREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,GREY,GREY],
            [WHITE,WHITE,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,WHITE,WHITE],
            [GREY,GREY,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,GREY,GREY],
            [YELLOW,YELLOW,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,BLACK,GREEN,GREEN],
            [YELLOW,YELLOW,YELLOW,GREY,WHITE,GREY,WHITE,WHITE,GREY,WHITE,GREY,GREEN,GREEN,GREEN],
            [YELLOW,YELLOW,YELLOW,GREY,WHITE,GREY,WHITE,WHITE,GREY,WHITE,GREY,GREEN,GREEN,GREEN]
          ]

for row in range(MAPHEIGHT):
  for column in range(MAPWIDTH):
    pygame.draw.rect(screen, tilemap[row][column], (column*TILESIZE+OFFSET,row*TILESIZE,TILESIZE,TILESIZE))

pygame.display.update()

time.sleep(5)


def Main():
  #game loop
  print("<3")

Main()  